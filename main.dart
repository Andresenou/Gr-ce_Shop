import 'package:alibaba/sign.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: SignUpPage(),
    );
  }
}

class SignUpPage extends StatefulWidget {
  @override
  _SignUpPageState createState() => _SignUpPageState();
}

class _SignUpPageState extends State<SignUpPage> {
  bool otp = false;
  bool isSeller = false;
  bool isBuyer = true;
  bool showUserDetails = false;
  bool showContactOption = false;
  bool isPhoneSelected = true;
  bool isAccepted = false;
  String selectedCountryCode = '+33';
  final List<TextEditingController> otpControllers =
      List.generate(6, (_) => TextEditingController());
  final List<FocusNode> otpFocusNodes = List.generate(6, (_) => FocusNode());
  final List<Map<String, String>> countries = [
    {'name': 'Afghanistan', 'flag': 'ğŸ‡¦ğŸ‡«', 'code': '+93'},
    {'name': 'Afrique du Sud', 'flag': 'ğŸ‡¿ğŸ‡¦', 'code': '+27'},
    {'name': 'Albanie', 'flag': 'ğŸ‡¦ğŸ‡±', 'code': '+355'},
    {'name': 'AlgÃ©rie', 'flag': 'ğŸ‡©ğŸ‡¿', 'code': '+213'},
    {'name': 'Allemagne', 'flag': 'ğŸ‡©ğŸ‡ª', 'code': '+49'},
    {'name': 'Andorre', 'flag': 'ğŸ‡¦ğŸ‡©', 'code': '+376'},
    {'name': 'Angola', 'flag': 'ğŸ‡¦ğŸ‡´', 'code': '+244'},
    {'name': 'Antigua-et-Barbuda', 'flag': 'ğŸ‡¦ğŸ‡¬', 'code': '+1-268'},
    {'name': 'Arabie saoudite', 'flag': 'ğŸ‡¸ğŸ‡¦', 'code': '+966'},
    {'name': 'Argentine', 'flag': 'ğŸ‡¦ğŸ‡·', 'code': '+54'},
    {'name': 'ArmÃ©nie', 'flag': 'ğŸ‡¦ğŸ‡²', 'code': '+374'},
    {'name': 'Australie', 'flag': 'ğŸ‡¦ğŸ‡º', 'code': '+61'},
    {'name': 'Autriche', 'flag': 'ğŸ‡¦ğŸ‡¹', 'code': '+43'},
    {'name': 'AzerbaÃ¯djan', 'flag': 'ğŸ‡¦ğŸ‡¿', 'code': '+994'},
    {'name': 'Bahamas', 'flag': 'ğŸ‡§ğŸ‡¸', 'code': '+1-242'},
    {'name': 'BahreÃ¯n', 'flag': 'ğŸ‡§ğŸ‡­', 'code': '+973'},
    {'name': 'Bangladesh', 'flag': 'ğŸ‡§ğŸ‡©', 'code': '+880'},
    {'name': 'Barbade', 'flag': 'ğŸ‡§ğŸ‡§', 'code': '+1-246'},
    {'name': 'Belgique', 'flag': 'ğŸ‡§ğŸ‡ª', 'code': '+32'},
    {'name': 'Belize', 'flag': 'ğŸ‡§ğŸ‡¿', 'code': '+501'},
    {'name': 'BÃ©nin', 'flag': 'ğŸ‡§ğŸ‡¯', 'code': '+229'},
    {'name': 'Bhoutan', 'flag': 'ğŸ‡§ğŸ‡¹', 'code': '+975'},
    {'name': 'BiÃ©lorussie', 'flag': 'ğŸ‡§ğŸ‡¾', 'code': '+375'},
    {'name': 'Bolivie', 'flag': 'ğŸ‡§ğŸ‡´', 'code': '+591'},
    {'name': 'Bosnie-HerzÃ©govine', 'flag': 'ğŸ‡§ğŸ‡¦', 'code': '+387'},
    {'name': 'Botswana', 'flag': 'ğŸ‡§ğŸ‡¼', 'code': '+267'},
    {'name': 'BrÃ©sil', 'flag': 'ğŸ‡§ğŸ‡·', 'code': '+55'},
    {'name': 'Brunei', 'flag': 'ğŸ‡§ğŸ‡³', 'code': '+673'},
    {'name': 'Bulgarie', 'flag': 'ğŸ‡§ğŸ‡¬', 'code': '+359'},
    {'name': 'Burkina Faso', 'flag': 'ğŸ‡§ğŸ‡«', 'code': '+226'},
    {'name': 'Burundi', 'flag': 'ğŸ‡§ğŸ‡®', 'code': '+257'},
    {'name': 'Cabo Verde', 'flag': 'ğŸ‡¨ğŸ‡»', 'code': '+238'},
    {'name': 'Cambodge', 'flag': 'ğŸ‡°ğŸ‡­', 'code': '+855'},
    {'name': 'Cameroun', 'flag': 'ğŸ‡¨ğŸ‡²', 'code': '+237'},
    {'name': 'Canada', 'flag': 'ğŸ‡¨ğŸ‡¦', 'code': '+1'},
    {'name': 'Chili', 'flag': 'ğŸ‡¨ğŸ‡±', 'code': '+56'},
    {'name': 'Chine', 'flag': 'ğŸ‡¨ğŸ‡³', 'code': '+86'},
    {'name': 'Chypre', 'flag': 'ğŸ‡¨ğŸ‡¾', 'code': '+357'},
    {'name': 'Colombie', 'flag': 'ğŸ‡¨ğŸ‡´', 'code': '+57'},
    {'name': 'Comores', 'flag': 'ğŸ‡°ğŸ‡²', 'code': '+269'},
    {'name': 'CorÃ©e du Nord', 'flag': 'ğŸ‡°ğŸ‡µ', 'code': '+850'},
    {'name': 'CorÃ©e du Sud', 'flag': 'ğŸ‡°ğŸ‡·', 'code': '+82'},
    {'name': 'Costa Rica', 'flag': 'ğŸ‡¨ğŸ‡·', 'code': '+506'},
    {'name': 'CÃ´te d\'Ivoire', 'flag': 'ğŸ‡¨ğŸ‡®', 'code': '+225'},
    {'name': 'Croatie', 'flag': 'ğŸ‡­ğŸ‡·', 'code': '+385'},
    {'name': 'Cuba', 'flag': 'ğŸ‡¨ğŸ‡º', 'code': '+53'},
    {'name': 'Danemark', 'flag': 'ğŸ‡©ğŸ‡°', 'code': '+45'},
    {'name': 'Djibouti', 'flag': 'ğŸ‡©ğŸ‡¯', 'code': '+253'},
    {'name': 'Dominique', 'flag': 'ğŸ‡©ğŸ‡²', 'code': '+1-767'},
    {'name': 'Ã‰gypte', 'flag': 'ğŸ‡ªğŸ‡¬', 'code': '+20'},
    {'name': 'Ã‰mirats arabes unis', 'flag': 'ğŸ‡¦ğŸ‡ª', 'code': '+971'},
    {'name': 'Ã‰quateur', 'flag': 'ğŸ‡ªğŸ‡¨', 'code': '+593'},
    {'name': 'Ã‰rythrÃ©e', 'flag': 'ğŸ‡ªğŸ‡·', 'code': '+291'},
    {'name': 'Espagne', 'flag': 'ğŸ‡ªğŸ‡¸', 'code': '+34'},
    {'name': 'Estonie', 'flag': 'ğŸ‡ªğŸ‡ª', 'code': '+372'},
    {'name': 'Eswatini', 'flag': 'ğŸ‡¸ğŸ‡¿', 'code': '+268'},
    {'name': 'Ã‰tats-Unis d\'AmÃ©rique', 'flag': 'ğŸ‡ºğŸ‡¸', 'code': '+1'},
    {'name': 'Ã‰thiopie', 'flag': 'ğŸ‡ªğŸ‡¹', 'code': '+251'},
    {'name': 'Fidji', 'flag': 'ğŸ‡«ğŸ‡¯', 'code': '+679'},
    {'name': 'Finlande', 'flag': 'ğŸ‡«ğŸ‡®', 'code': '+358'},
    {'name': 'France', 'flag': 'ğŸ‡«ğŸ‡·', 'code': '+33'},
    {'name': 'Gabon', 'flag': 'ğŸ‡¬ğŸ‡¦', 'code': '+241'},
    {'name': 'Gambie', 'flag': 'ğŸ‡¬ğŸ‡²', 'code': '+220'},
    {'name': 'GÃ©orgie', 'flag': 'ğŸ‡¬ğŸ‡ª', 'code': '+995'},
    {'name': 'Ghana', 'flag': 'ğŸ‡¬ğŸ‡­', 'code': '+233'},
    {'name': 'GrÃ¨ce', 'flag': 'ğŸ‡¬ğŸ‡·', 'code': '+30'},
    {'name': 'Grenade', 'flag': 'ğŸ‡¬ğŸ‡©', 'code': '+1-473'},
    {'name': 'Guatemala', 'flag': 'ğŸ‡¬ğŸ‡¹', 'code': '+502'},
    {'name': 'GuinÃ©e', 'flag': 'ğŸ‡¬ğŸ‡³', 'code': '+224'},
    {'name': 'GuinÃ©e-Bissau', 'flag': 'ğŸ‡¬ğŸ‡¼', 'code': '+245'},
    {'name': 'GuinÃ©e Ã©quatoriale', 'flag': 'ğŸ‡¬ğŸ‡¶', 'code': '+240'},
    {'name': 'Guyana', 'flag': 'ğŸ‡¬ğŸ‡¾', 'code': '+592'},
    {'name': 'HaÃ¯ti', 'flag': 'ğŸ‡­ğŸ‡¹', 'code': '+509'},
    {'name': 'Honduras', 'flag': 'ğŸ‡­ğŸ‡³', 'code': '+504'},
    {'name': 'Hongrie', 'flag': 'ğŸ‡­ğŸ‡º', 'code': '+36'},
    {'name': 'Inde', 'flag': 'ğŸ‡®ğŸ‡³', 'code': '+91'},
    {'name': 'IndonÃ©sie', 'flag': 'ğŸ‡®ğŸ‡©', 'code': '+62'},
    {'name': 'Irak', 'flag': 'ğŸ‡®ğŸ‡¶', 'code': '+964'},
    {'name': 'Iran', 'flag': 'ğŸ‡®ğŸ‡·', 'code': '+98'},
    {'name': 'Irlande', 'flag': 'ğŸ‡®ğŸ‡ª', 'code': '+353'},
    {'name': 'Islande', 'flag': 'ğŸ‡®ğŸ‡¸', 'code': '+354'},
    {'name': 'IsraÃ«l', 'flag': 'ğŸ‡®ğŸ‡±', 'code': '+972'},
    {'name': 'Italie', 'flag': 'ğŸ‡®ğŸ‡¹', 'code': '+39'},
    {'name': 'JamaÃ¯que', 'flag': 'ğŸ‡¯ğŸ‡²', 'code': '+1-876'},
    {'name': 'Japon', 'flag': 'ğŸ‡¯ğŸ‡µ', 'code': '+81'},
    {'name': 'Jordanie', 'flag': 'ğŸ‡¯ğŸ‡´', 'code': '+962'},
    {'name': 'Kazakhstan', 'flag': 'ğŸ‡°ğŸ‡¿', 'code': '+7'},
    {'name': 'Kenya', 'flag': 'ğŸ‡°ğŸ‡ª', 'code': '+254'},
    {'name': 'Kirghizistan', 'flag': 'ğŸ‡°ğŸ‡¬', 'code': '+996'},
    {'name': 'Kiribati', 'flag': 'ğŸ‡°ğŸ‡®', 'code': '+686'},
    {'name': 'Kosovo', 'flag': 'ğŸ‡½ğŸ‡°', 'code': '+383'},
    {'name': 'KoweÃ¯t', 'flag': 'ğŸ‡°ğŸ‡¼', 'code': '+965'},
    {'name': 'Laos', 'flag': 'ğŸ‡±ğŸ‡¦', 'code': '+856'},
    {'name': 'Lesotho', 'flag': 'ğŸ‡±ğŸ‡¸', 'code': '+266'},
    {'name': 'Lettonie', 'flag': 'ğŸ‡±ğŸ‡»', 'code': '+371'},
    {'name': 'Liban', 'flag': 'ğŸ‡±ğŸ‡§', 'code': '+961'},
    {'name': 'LibÃ©ria', 'flag': 'ğŸ‡±ğŸ‡·', 'code': '+231'},
    {'name': 'Libye', 'flag': 'ğŸ‡±ğŸ‡¾', 'code': '+218'},
    {'name': 'Liechtenstein', 'flag': 'ğŸ‡±ğŸ‡®', 'code': '+423'},
    {'name': 'Lituanie', 'flag': 'ğŸ‡±ğŸ‡¹', 'code': '+370'},
    {'name': 'Luxembourg', 'flag': 'ğŸ‡±ğŸ‡º', 'code': '+352'},
    {'name': 'Madagascar', 'flag': 'ğŸ‡²ğŸ‡¬', 'code': '+261'},
    {'name': 'Malaisie', 'flag': 'ğŸ‡²ğŸ‡¾', 'code': '+60'},
    {'name': 'Malawi', 'flag': 'ğŸ‡²ğŸ‡¼', 'code': '+265'},
    {'name': 'Maldives', 'flag': 'ğŸ‡²ğŸ‡»', 'code': '+960'},
    {'name': 'Mali', 'flag': 'ğŸ‡²ğŸ‡±', 'code': '+223'},
    {'name': 'Malte', 'flag': 'ğŸ‡²ğŸ‡¹', 'code': '+356'},
    {'name': 'Maroc', 'flag': 'ğŸ‡²ğŸ‡¦', 'code': '+212'},
    {'name': 'Maurice', 'flag': 'ğŸ‡²ğŸ‡º', 'code': '+230'},
    {'name': 'Mauritanie', 'flag': 'ğŸ‡²ğŸ‡·', 'code': '+222'},
    {'name': 'Mexique', 'flag': 'ğŸ‡²ğŸ‡½', 'code': '+52'},
    {'name': 'Moldavie', 'flag': 'ğŸ‡²ğŸ‡©', 'code': '+373'},
    {'name': 'Monaco', 'flag': 'ğŸ‡²ğŸ‡¨', 'code': '+377'},
    {'name': 'Mongolie', 'flag': 'ğŸ‡²ğŸ‡³', 'code': '+976'},
    {'name': 'MontÃ©nÃ©gro', 'flag': 'ğŸ‡²ğŸ‡ª', 'code': '+382'},
    {'name': 'Mozambique', 'flag': 'ğŸ‡²ğŸ‡¿', 'code': '+258'},
    {'name': 'Myanmar', 'flag': 'ğŸ‡²ğŸ‡²', 'code': '+95'},
    {'name': 'Namibie', 'flag': 'ğŸ‡³ğŸ‡¦', 'code': '+264'},
    {'name': 'NÃ©pal', 'flag': 'ğŸ‡³ğŸ‡µ', 'code': '+977'},
    {'name': 'Nicaragua', 'flag': 'ğŸ‡³ğŸ‡®', 'code': '+505'},
    {'name': 'Niger', 'flag': 'ğŸ‡³ğŸ‡ª', 'code': '+227'},
    {'name': 'Nigeria', 'flag': 'ğŸ‡³ğŸ‡¬', 'code': '+234'},
    {'name': 'NorvÃ¨ge', 'flag': 'ğŸ‡³ğŸ‡´', 'code': '+47'},
    {'name': 'Nouvelle-ZÃ©lande', 'flag': 'ğŸ‡³ğŸ‡¿', 'code': '+64'},
    {'name': 'Oman', 'flag': 'ğŸ‡´ğŸ‡²', 'code': '+968'},
    {'name': 'Ouganda', 'flag': 'ğŸ‡ºğŸ‡¬', 'code': '+256'},
    {'name': 'OuzbÃ©kistan', 'flag': 'ğŸ‡ºğŸ‡¿', 'code': '+998'},
    {'name': 'Pakistan', 'flag': 'ğŸ‡µğŸ‡°', 'code': '+92'},
    {'name': 'Palaos', 'flag': 'ğŸ‡µğŸ‡¼', 'code': '+680'},
    {'name': 'Panama', 'flag': 'ğŸ‡µğŸ‡¦', 'code': '+507'},
    {'name': 'Papouasie-Nouvelle-GuinÃ©e', 'flag': 'ğŸ‡µğŸ‡¬', 'code': '+675'},
    {'name': 'Paraguay', 'flag': 'ğŸ‡µğŸ‡¾', 'code': '+595'},
    {'name': 'Pays-Bas', 'flag': 'ğŸ‡³ğŸ‡±', 'code': '+31'},
    {'name': 'PÃ©rou', 'flag': 'ğŸ‡µğŸ‡ª', 'code': '+51'},
    {'name': 'Philippines', 'flag': 'ğŸ‡µğŸ‡­', 'code': '+63'},
    {'name': 'Pologne', 'flag': 'ğŸ‡µğŸ‡±', 'code': '+48'},
    {'name': 'Portugal', 'flag': 'ğŸ‡µğŸ‡¹', 'code': '+351'},
    {'name': 'Qatar', 'flag': 'ğŸ‡¶ğŸ‡¦', 'code': '+974'},
    {'name': 'RÃ©publique centrafricaine', 'flag': 'ğŸ‡¨ğŸ‡«', 'code': '+236'},
    {
      'name': 'RÃ©publique dÃ©mocratique du Congo',
      'flag': 'ğŸ‡¨ğŸ‡©',
      'code': '+243'
    },
    {'name': 'RÃ©publique dominicaine', 'flag': 'ğŸ‡©ğŸ‡´', 'code': '+1-809'},
    {'name': 'RÃ©publique tchÃ¨que', 'flag': 'ğŸ‡¨ğŸ‡¿', 'code': '+420'},
    {'name': 'Roumanie', 'flag': 'ğŸ‡·ğŸ‡´', 'code': '+40'},
    {'name': 'Royaume-Uni', 'flag': 'ğŸ‡¬ğŸ‡§', 'code': '+44'},
    {'name': 'Russie', 'flag': 'ğŸ‡·ğŸ‡º', 'code': '+7'},
    {'name': 'Rwanda', 'flag': 'ğŸ‡·ğŸ‡¼', 'code': '+250'},
    {'name': 'Saint-Christophe-et-NiÃ©vÃ¨s', 'flag': 'ğŸ‡°ğŸ‡³', 'code': '+1-869'},
    {'name': 'Sainte-Lucie', 'flag': 'ğŸ‡±ğŸ‡¨', 'code': '+1-758'},
    {'name': 'Saint-Marin', 'flag': 'ğŸ‡¸ğŸ‡²', 'code': '+378'},
    {
      'name': 'Saint-Vincent-et-les-Grenadines',
      'flag': 'ğŸ‡»ğŸ‡¨',
      'code': '+1-784'
    },
    {'name': 'Salomon', 'flag': 'ğŸ‡¸ğŸ‡§', 'code': '+677'},
    {'name': 'Salvador', 'flag': 'ğŸ‡¸ğŸ‡»', 'code': '+503'},
    {'name': 'Samoa', 'flag': 'ğŸ‡¼ğŸ‡¸', 'code': '+685'},
    {'name': 'SÃ£o TomÃ©-et-PrÃ­ncipe', 'flag': 'ğŸ‡¸ğŸ‡¹', 'code': '+239'},
    {'name': 'SÃ©nÃ©gal', 'flag': 'ğŸ‡¸ğŸ‡³', 'code': '+221'},
    {'name': 'Serbie', 'flag': 'ğŸ‡·ğŸ‡¸', 'code': '+381'},
    {'name': 'Seychelles', 'flag': 'ğŸ‡¸ğŸ‡¨', 'code': '+248'},
    {'name': 'Sierra Leone', 'flag': 'ğŸ‡¸ğŸ‡±', 'code': '+232'},
    {'name': 'Singapour', 'flag': 'ğŸ‡¸ğŸ‡¬', 'code': '+65'},
    {'name': 'Slovaquie', 'flag': 'ğŸ‡¸ğŸ‡°', 'code': '+421'},
    {'name': 'SlovÃ©nie', 'flag': 'ğŸ‡¸ğŸ‡®', 'code': '+386'},
    {'name': 'Somalie', 'flag': 'ğŸ‡¸ğŸ‡´', 'code': '+252'},
    {'name': 'Soudan', 'flag': 'ğŸ‡¸ğŸ‡©', 'code': '+249'},
    {'name': 'Soudan du Sud', 'flag': 'ğŸ‡¸ğŸ‡¸', 'code': '+211'},
    {'name': 'Sri Lanka', 'flag': 'ğŸ‡±ğŸ‡°', 'code': '+94'},
    {'name': 'SuÃ¨de', 'flag': 'ğŸ‡¸ğŸ‡ª', 'code': '+46'},
    {'name': 'Suisse', 'flag': 'ğŸ‡¨ğŸ‡­', 'code': '+41'},
    {'name': 'Suriname', 'flag': 'ğŸ‡¸ğŸ‡·', 'code': '+597'},
    {'name': 'Syrie', 'flag': 'ğŸ‡¸ğŸ‡¾', 'code': '+963'},
    {'name': 'Tadjikistan', 'flag': 'ğŸ‡¹ğŸ‡¯', 'code': '+992'},
    {'name': 'Tanzanie', 'flag': 'ğŸ‡¹ğŸ‡¿', 'code': '+255'},
    {'name': 'Tchad', 'flag': 'ğŸ‡¹ğŸ‡©', 'code': '+235'},
    {'name': 'ThaÃ¯lande', 'flag': 'ğŸ‡¹ğŸ‡­', 'code': '+66'},
    {'name': 'Timor oriental', 'flag': 'ğŸ‡¹ğŸ‡±', 'code': '+670'},
    {'name': 'Togo', 'flag': 'ğŸ‡¹ğŸ‡¬', 'code': '+228'},
    {'name': 'Tonga', 'flag': 'ğŸ‡¹ğŸ‡´', 'code': '+676'},
    {'name': 'TrinitÃ©-et-Tobago', 'flag': 'ğŸ‡¹ğŸ‡¹', 'code': '+1-868'},
    {'name': 'Tunisie', 'flag': 'ğŸ‡¹ğŸ‡³', 'code': '+216'},
    {'name': 'TurkmÃ©nistan', 'flag': 'ğŸ‡¹ğŸ‡²', 'code': '+993'},
    {'name': 'Turquie', 'flag': 'ğŸ‡¹ğŸ‡·', 'code': '+90'},
    {'name': 'Tuvalu', 'flag': 'ğŸ‡¹ğŸ‡»', 'code': '+688'},
    {'name': 'Ukraine', 'flag': 'ğŸ‡ºğŸ‡¦', 'code': '+380'},
    {'name': 'Uruguay', 'flag': 'ğŸ‡ºğŸ‡¾', 'code': '+598'},
    {'name': 'Vanuatu', 'flag': 'ğŸ‡»ğŸ‡º', 'code': '+678'},
    {'name': 'Vatican', 'flag': 'ğŸ‡»ğŸ‡¦', 'code': '+39'},
    {'name': 'Venezuela', 'flag': 'ğŸ‡»ğŸ‡ª', 'code': '+58'},
    {'name': 'Vietnam', 'flag': 'ğŸ‡»ğŸ‡³', 'code': '+84'},
    {'name': 'YÃ©men', 'flag': 'ğŸ‡¾ğŸ‡ª', 'code': '+967'},
    {'name': 'Zambie', 'flag': 'ğŸ‡¿ğŸ‡²', 'code': '+260'},
    {'name': 'Zimbabwe', 'flag': 'ğŸ‡¿ğŸ‡¼', 'code': '+263'},

// Ajoutez le reste ici...
  ];
  final TextEditingController phoneController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blueGrey[50],
      body: Center(
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(24.0),
          child: Container(
            padding: EdgeInsets.all(24),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(30),
              boxShadow: [
                BoxShadow(
                  color: Colors.black12,
                  blurRadius: 15,
                  offset: Offset(0, 6),
                ),
              ],
            ),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Center(
                  child: Column(
                    children: [
                      Icon(Icons.shop, size: 60, color: Colors.blueAccent),
                      SizedBox(height: 10),
                      Text(
                        'GrÃ¢ce Shop',
                        style: TextStyle(
                          fontSize: 30,
                          fontWeight: FontWeight.bold,
                          color: Colors.blueAccent,
                        ),
                      ),
                    ],
                  ),
                ),
                SizedBox(height: 30),

                // Ã‰tape 1 : Choisir entre vendeur et acheteur
                if (!showUserDetails && !showContactOption && !otp) ...[
                  Center(
                    child: Text(
                      "Vous Ãªtes: ",
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.w600,
                        color: Colors.black,
                      ),
                      textAlign: TextAlign
                          .center, // Assure l'alignement du texte dans son conteneur
                    ),
                  ),
                  SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      _buildRoleOption('Acheteur', isBuyer, () {
                        setState(() {
                          isBuyer = true;
                          isSeller = false;
                        });
                      }),
                      SizedBox(
                        width: 10,
                      ),
                      _buildRoleOption('Vendeur', isSeller, () {
                        setState(() {
                          isSeller = true;
                          isBuyer = false;
                        });
                      }),
                    ],
                  ),
                  SizedBox(height: 16),
                  Center(
                    child: ElevatedButton(
                      onPressed: (isSeller || isBuyer)
                          ? () {
                              setState(() {
                                showUserDetails = true;
                              });
                            }
                          : null,
                      style: ElevatedButton.styleFrom(
                        foregroundColor: Colors.white,
                        backgroundColor: Colors.blueAccent,
                        padding:
                            EdgeInsets.symmetric(horizontal: 32, vertical: 12),
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(15)),
                      ),
                      child: Text("Suivant"),
                    ),
                  )
                ],

                // Ã‰tape 2 : DÃ©tails utilisateur pour vendeur ou acheteur
                if (showUserDetails && !showContactOption && !otp) ...[
                  SizedBox(height: 30),
                  Text(
                    'Inscription',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 25,
                        fontWeight: FontWeight.bold,
                        color: Colors.black87),
                  ),
                  SizedBox(height: 30),
                  if (isSeller) ...[
                    _buildTextField('Nom d\'utilisateur', Icons.person_outline),
                    SizedBox(
                      height: 10,
                    ),
                    _buildTextField(
                        'Nom de la boutique', Icons.store_mall_directory),
                    SizedBox(
                      height: 10,
                    ),
                    _buildTextField(
                        'Adresse de la boutique', Icons.location_on),
                  ] else if (isBuyer) ...[
                    _buildTextField('Nom d\'utilisateur', Icons.person_outline),
                  ],
                  SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      _buildNavButton('Retour', Colors.grey, () {
                        setState(() {
                          showUserDetails = false;
                        });
                      }),
                      _buildNavButton('Suivant', Colors.blueAccent, () {
                        setState(() {
                          showContactOption = true;
                        });
                      }),
                    ],
                  ),
                ],

                // Ã‰tape 3 : Choix de la mÃ©thode de contact
                if (showContactOption) ...[
                  SizedBox(height: 30),
                  Text(
                    'Choisissez une mÃ©thode de contact',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black87),
                  ),
                  SizedBox(height: 20),
                  Row(
                    children: [
                      _buildContactOption('TÃ©lÃ©phone', isPhoneSelected, () {
                        setState(() {
                          isPhoneSelected = true;
                        });
                      }),
                      SizedBox(width: 10),
                      _buildContactOption('Email', !isPhoneSelected, () {
                        setState(() {
                          isPhoneSelected = false;
                        });
                      }),
                    ],
                  ),
                  SizedBox(height: 20),

                  // Champ numÃ©ro de tÃ©lÃ©phone ou e-mail
                  if (isPhoneSelected)
                    _buildPhoneField()
                  else
                    _buildEmailField(),

                  SizedBox(height: 20),
                  _buildAcceptCheckBox(),
                  SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      _buildNavButton('Retour', Colors.grey, () {
                        setState(() {
                          showContactOption = false;
                        });
                      }),
                      _buildSubmitButton()
                    ],
                  ),
                ],

                // Ã‰tape 4 : Choix de la mÃ©thode de contact
                if (otp) ...[
                  AnimatedSwitcher(
                    duration: Duration(milliseconds: 400),
                    transitionBuilder:
                        (Widget child, Animation<double> animation) {
                      return ScaleTransition(
                        scale: animation,
                        child: FadeTransition(
                          opacity: animation,
                          child: child,
                        ),
                      );
                    },
                    child: OtpWidget(
                      key: ValueKey<bool>(otp),
                      controllers: otpControllers,
                      focusNodes: otpFocusNodes,
                      onOtpEntered: (otp) {
                        print("OTP entrÃ©: $otp");
                      },
                      context: context,
                    ),
                  ),
                ],
                SizedBox(
                  height: 30,
                ),
                Center(
                  child: RichText(
                    text: TextSpan(
                      text: 'DÃ©jÃ  un compte? ',
                      style: TextStyle(color: Colors.black, fontSize: 16.0),
                      // Style pour le texte non cliquable
                      children: [
                        TextSpan(
                          text: 'connexion',
                          style: TextStyle(
                              color: Colors.indigo,
                              fontWeight: FontWeight.bold),
                          recognizer: TapGestureRecognizer()
                            ..onTap = () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => LoginPage()),
                              );
                            },
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildRoleOption(String label, bool isSelected, VoidCallback onTap) {
    return Expanded(
      child: ElevatedButton(
        onPressed: onTap,
        style: ElevatedButton.styleFrom(
          foregroundColor: isSelected ? Colors.white : Colors.black87,
          backgroundColor: isSelected ? Colors.blueAccent : Colors.grey[300],
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
          shadowColor: isSelected ? Colors.blueAccent.withOpacity(0.3) : null,
          elevation: isSelected ? 6 : 0,
        ),
        child: Text(
          label,
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.w600,
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(String label, IconData icon) {
    return TextField(
      decoration: InputDecoration(
        labelText: label,
        suffixIcon: Icon(icon),
        border: OutlineInputBorder(borderRadius: BorderRadius.circular(15)),
        contentPadding: EdgeInsets.symmetric(vertical: 15, horizontal: 20),
      ),
    );
  }

  Widget _buildNavButton(String label, Color color, VoidCallback onPressed) {
    return ElevatedButton(
      onPressed: onPressed,
      style: ElevatedButton.styleFrom(
        foregroundColor: Colors.white,
        backgroundColor: color,
        padding: EdgeInsets.symmetric(horizontal: 32, vertical: 12),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
      ),
      child: Text(label),
    );
  }

  Widget _buildContactOption(
      String label, bool isSelected, VoidCallback onTap) {
    return Expanded(
      child: ElevatedButton(
        onPressed: onTap,
        style: ElevatedButton.styleFrom(
          foregroundColor: isSelected ? Colors.white : Colors.black87,
          backgroundColor: isSelected ? Colors.blueAccent : Colors.white,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
        ),
        child: Text(label),
      ),
    );
  }

  Widget _buildPhoneField() {
    return Row(
      children: [
        // Limiter la largeur du conteneur pour le DropdownButton
        Flexible(
          flex: 2, // DÃ©finir une proportion relative
          child: Container(
            padding: EdgeInsets.symmetric(horizontal: 8),
            decoration: BoxDecoration(
              border: Border.all(color: Colors.grey),
              borderRadius: BorderRadius.circular(10),
            ),
            child: DropdownButton<String>(
              value: selectedCountryCode,
              isExpanded: true,
              underline: SizedBox(),
              onChanged: (String? newValue) {
                setState(() {
                  selectedCountryCode = newValue!;
                });
              },
              items: countries
                  .map<DropdownMenuItem<String>>((Map<String, String> country) {
                return DropdownMenuItem<String>(
                  value: country['code']!,
                  child: Row(
                    children: [
                      Text(country['flag']!),
                      SizedBox(width: 5),
                      Expanded(
                          child: Text(country['name']!,
                              overflow: TextOverflow.ellipsis)),
                    ],
                  ),
                );
              }).toList(),
            ),
          ),
        ),
        SizedBox(width: 10),
        // Ã‰tendre le TextField pour occuper l'espace restant
        Expanded(
          flex: 3,
          child: TextField(
            controller: phoneController,
            keyboardType: TextInputType.phone,
            decoration: InputDecoration(
              labelText: 'NumÃ©ro de tÃ©lÃ©phone',
              border:
                  OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
              contentPadding:
                  EdgeInsets.symmetric(vertical: 15, horizontal: 20),
            ),
          ),
        ),
      ],
    );
  }

  Widget _buildEmailField() {
    return TextField(
      decoration: InputDecoration(
        labelText: 'E-mail',
        suffixIcon: Icon(Icons.email_outlined),
        border: OutlineInputBorder(borderRadius: BorderRadius.circular(15)),
        contentPadding: EdgeInsets.symmetric(vertical: 15, horizontal: 20),
      ),
    );
  }

  Widget _buildAcceptCheckBox() {
    return Row(
      children: [
        Checkbox(
          value: isAccepted,
          onChanged: (bool? newValue) {
            setState(() {
              isAccepted = newValue!;
            });
          },
        ),
        Text(
          'J\'accepte les conditions d\'utilisation',
          style: TextStyle(fontSize: 14, color: Colors.black54),
        ),
      ],
    );
  }

  Widget _buildSubmitButton() {
    return ElevatedButton(
      onPressed: isAccepted
          ? () {
              setState(() {
                otp = true;
                showContactOption = false;
              });
            }
          : null,
      style: ElevatedButton.styleFrom(
        foregroundColor: Colors.white,
        backgroundColor: Colors.blueAccent,
        padding: EdgeInsets.symmetric(horizontal: 32, vertical: 12),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
      ),
      child: Text('S\'inscrire'),
    );
  }
}
